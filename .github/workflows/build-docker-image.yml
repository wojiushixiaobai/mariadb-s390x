name: build

on:
  workflow_dispatch:
  schedule:
    - cron: '0 20 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        DISTRO: [ 'debian' ]
        SUITE: [ 'bookworm', 'trixie' ]
        VERSION: [ '10.6', '10.11', '11.4' ]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          # Until https://github.com/tonistiigi/binfmt/issues/215
          image: tonistiigi/binfmt:qemu-v8.1.5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ matrix.DISTRO }}-${{ matrix.SUITE }}-${{ matrix.VERSION }}-${{ github.sha }}
          restore-keys: |
            ${{ matrix.DISTRO }}-${{ matrix.SUITE }}-${{ matrix.VERSION }}-

      - name: Check Version
        run: |
          echo "Checking version..."
          wget https://github.com/MariaDB/mariadb-docker/raw/master/versions.json
          VERSION=$(jq -r '."${{ matrix.VERSION }}".version' versions.json)
          if [ -z "$VERSION" ] || [ "$VERSION" == "null" ]; then
            echo "Version not found"
            exit 1
          fi

          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "Current version: ${VERSION}"

      - name: Check Release
        run: |
          gh release view ${{ env.VERSION }} -R ${{ github.repository }} >/dev/null 2>&1 || echo "create=1" >> $GITHUB_ENV
          case ${{ matrix.SUITE }} in
            bullseye)
              grep_pattern="mariadb-.*.deb11_s390x.deb"
              ;;
            bookworm)
              grep_pattern="mariadb-.*.deb12_s390x.deb"
              ;;
            trixie)
              grep_pattern="mariadb-.*.debsid_s390x.deb"
              ;;
            *)
              grep_pattern="mariadb-.*_s390x.deb"
              ;;
          esac
          gh release view ${{ env.VERSION }} -R ${{ github.repository }} | grep $grep_pattern >/dev/null 2>&1 || echo "build=1" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push
        if: env.build == '1'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.DISTRO }}/Dockerfile
          platforms: linux/s390x
          push: true
          build-args: |
            DISTRO=${{ matrix.DISTRO }}
            SUITE=${{ matrix.SUITE }}
            VERSION=${{ env.VERSION }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/mariadb-buildcache-${{ matrix.DISTRO }}:${{ env.VERSION }}-${{ matrix.SUITE }}
          outputs: type=image,oci-mediatypes=true,compression=zstd,compression-level=3,force-compression=true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        if: env.build == '1'
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Create Tag
        if: env.create == '1'
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          echo $(date "+%Y%m%d") > serial
          git add .
          git commit -m "Release ${{ env.VERSION }}" || true
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}  || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: env.create == '1'
        run: |
          gh release create ${{ env.VERSION }} -R ${{ github.repository }} --title ${{ env.VERSION }} || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upgrade Release
        if: env.build == '1'
        run: |
          docker run --rm --platform linux/s390x -v $(pwd)/dist:/dist ghcr.io/${{ github.repository_owner }}/mariadb-buildcache-${{ matrix.DISTRO }}:${{ env.VERSION }}-${{ matrix.SUITE }}
          ls -al dist
          gh release upload ${{ env.VERSION }} -R ${{ github.repository }} dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}